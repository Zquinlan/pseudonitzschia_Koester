pcoa_dom$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
# VISUALIZATION -- PCoA org and unfilfil -------------------------------------------------
##Quant all
pcoa_quant <- quant_stats%>%
unite(sample, c("Experiment", "Organism", "biological_replicates", "DOM_fil", "technical_replicates"), sep = "_")%>%
spread(feature_number, asin)%>%
column_to_rownames("sample")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_quant$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
## otu Exp1 and 2 del, sub, mul
pcoa_otu_bothExp <- otu_stats%>%
filter(sample_code_16S != "Exp1_Pn-subpacifica_A_I",
sample_code_16S != "Exp1_Pn-subpacifica_A_II",
sample_code_16S != "Exp1_Pn-delicatissima_B_I",
sample_code_16S != "Exp1_Pn-delicatissima_B_II",)%>%
separate(sample_code_16S, c("Experiment", "Organism",
"biological_replicates", "technical_replicates"), sep = "_")%>%
filter(Experiment != "CCE-P1706",
Experiment != "Piers")%>%
filter(Organism != "Pn-hasleana",
Organism != "Pn-galaxiae")%>%
group_by(Taxonomy)%>%
filter(sum(asin) != 0)%>%
ungroup()%>%
unite(sample_name, c("Experiment", "Organism", "biological_replicates",
"technical_replicates"), sep = "_")%>%
select(-c(reads, ra))%>%
spread(Taxonomy, asin)%>%
column_to_rownames("sample_name")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_otu_bothExp$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
## otu Exp2
pcoa_otu_Exp2 <- otu_stats%>%
separate(sample_code_16S, c("Experiment", "Organism",
"biological_replicates", "technical_replicates"), sep = "_")%>%
filter(Experiment == "Exp2")%>%
group_by(Taxonomy)%>%
filter(sum(asin) != 0)%>%
ungroup()%>%
unite(sample_name, c("Experiment", "Organism", "biological_replicates",
"technical_replicates"), sep = "_")%>%
select(-c(reads, ra))%>%
spread(Taxonomy, asin)%>%
column_to_rownames("sample_name")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_otu_Exp2$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
## Organism Matrix
pcoa_org <- matrix_multiplied_org%>%
gather(cat, val, 2:ncol(.))%>%
#mutate(val = val+ min(val) +1)%>%
#spread(cat, val)%>%
column_to_rownames("sample_code")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_org$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
## Unfil vs Fil matrix
pcoa_dom <- matrix_multiplied_dom%>%
#mutate(val = val+ min(val) +1)%>%
#spread(cat, val)%>%
column_to_rownames("sample_code")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_dom$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
#Settings for Pcoas
pcoa_settings <- function(x) {
ggplot(x, aes(Axis.1, Axis.2, color = Organism, shape = DOM_fil)) +
geom_point(stat = "identity", size = 4) +
scale_color_manual(values = c("#75d648", "#ae2da9", "#2d67c7", "#f27304", "#64d6f7")) +
scale_shape_manual(values=c(1, 16))+
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.x = element_text(face="bold", size=14),
axis.text.y = element_text(face="bold", size=14),
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
axis.line = element_line(color="black"))
}
## Plotting PCoAs
pdf("Plots/PCoA_all.pdf", width = 7, height = 5)
pcoa_quant$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
pcoa_settings() +
ylab(str_c("Axis 2", " (", round(pcoa_quant$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_quant$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("quant all")
pcoa_otu_bothExp$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "technical_replicates"), sep = "_")%>%
ggplot(aes(Axis.1, Axis.2, color = Organism, shape = Experiment)) +
geom_point(size = 4) +
scale_color_manual(values = c("#75d648", "#f27304", "#64d6f7")) +
scale_shape_manual(values=c(17,16))+
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.x = element_text(face="bold", size=14),
axis.text.y = element_text(face="bold", size=14),
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
axis.line = element_line(color="black"))+
ylab(str_c("Axis 2", " (", round(pcoa_otu_bothExp$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_otu_bothExp$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("otus")
pcoa_otu_Exp2$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "technical_replicates"), sep = "_")%>%
ggplot(aes(Axis.1, Axis.2, color = Organism, shape = Experiment)) +
geom_point(stat = "identity", aes(size = 0.1)) +
scale_color_manual(values = c("#75d648", "#ae2da9", "#2d67c7", "#f27304", "#64d6f7")) +
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.x = element_text(face="bold", size=14),
axis.text.y = element_text(face="bold", size=14),
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
axis.line = element_line(color="black"))+
ylab(str_c("Axis 2", " (", round(pcoa_otu_Exp2$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_otu_Exp2$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("otus")
pcoa_org$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
pcoa_settings() +
ylab(str_c("Axis 2", " (", round(pcoa_org$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_org$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("Organism 0.05")
pcoa_dom$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
pcoa_settings() +
ylab(str_c("Axis 2", " (", round(pcoa_dom$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_dom$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("UnfilFil 0.05")
dev.off()
# VISUALIZATION -- Mean Decrease Accuracy scatterplots -------------------------
mda_theme <- theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
axis.line = element_line(color="black"))
pdf("./Plots/Mean_Decrease_Accuracy.pdf", height = 5, width = 7)
ggplot(rf_quant_org_mda, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("Organism QUANT Mean Decrease Accuracy pval = 0.05") +
xlab("Features (decreasing mda)") +
ylab("Mean Decrease Accuracy") +
geom_hline(yintercept = (mean(rf_quant_org_mda$MeanDecreaseAccuracy + sd(rf_quant_org_mda$MeanDecreaseAccuracy))),
col = "red") +
mda_theme
ggplot(rf_quant_dom_mda, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("DOM Quant Mean Decrease Accuracy pval = 0.05") +
xlab("Features (decreasing mda)") +
ylab("Mean Decrease Accuracy") +
geom_hline(yintercept = (mean(rf_quant_org_mda$MeanDecreaseAccuracy + sd(rf_quant_org_mda$MeanDecreaseAccuracy))),
col = "red") +
mda_theme
ggplot(otu_rf_mda, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("OTU Mean Decrease Accuracy pval = 0.05") +
xlab("Features (decreasing mda)") +
ylab("Mean Decrease Accuracy") +
mda_theme
ggplot(rf_matrix_mda_org, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("Organism Matrix Mean Decrease Accuracy pval = 0.05") +
xlab("Features (decreasing mda)") +
ylab("Mean Decrease Accuracy") +
geom_hline(yintercept = (top_n(rf_matrix_mda_org, 30, MeanDecreaseAccuracy)%>%
arrange(-MeanDecreaseAccuracy))$MeanDecreaseAccuracy[30],
col = "red") +
mda_theme
ggplot(rf_matrix_UnfilFil_mda, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("FilUnfil Matrix Mean Decrease Accuracy pval = 0.05") +
xlab("Features (decreasing mda)") +
ylab("Mean Decrease Accuracy") +
geom_hline(yintercept = (top_n(rf_matrix_UnfilFil_mda, 30, MeanDecreaseAccuracy)%>%
arrange(-MeanDecreaseAccuracy))$MeanDecreaseAccuracy[30],
col = "red") +
mda_theme
dev.off()
plot(pcoa_dom)
pcoa_dom$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
pcoa_settings() +
ylab(str_c("Axis 2", " (", round(pcoa_dom$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_dom$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("UnfilFil 0.05")
View(quant_binary_org)
boxplot_N_binary <- quant_binary_org%>%
left_join(feature_info, by = 'feature_number')
quant_binary_org <- quant_stats%>%  ## Okay so here we are first making the data "tidy"
filter(feature_number %in% canopus_available_features_org)%>%
unite(feature, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
group_by(feature_number)%>%
mutate(binary = case_when(asin > mean(asin) ~ 1,
TRUE ~ 0))%>%
ungroup()%>%
select(-asin)%>%
spread(feature_number, binary)%>%
column_to_rownames("feature")
quant_binary_org_df <- quant_stats%>%  ## Okay so here we are first making the data "tidy"
filter(feature_number %in% canopus_available_features_org)%>%
unite(feature, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
group_by(feature_number)%>%
mutate(binary = case_when(asin > mean(asin) ~ 1,
TRUE ~ 0))%>%
ungroup()%>%
select(-asin)%>%
spread(feature_number, binary)%>%
column_to_rownames("feature")
quant_binary_org <-  quant_binary_org_df %>%
data.matrix(rownames.force = NA)
boxplot_N_binary <- quant_binary_org_df%>%
left_join(feature_info, by = 'feature_number')
View(quant_binary_org_df)
View(quant_ra)
quant_binary_org_df <- quant_stats%>%  ## Okay so here we are first making the data "tidy"
filter(feature_number %in% canopus_available_features_org)%>%
unite(feature, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
group_by(feature_number)%>%
mutate(binary = case_when(asin > mean(asin) ~ 1,
TRUE ~ 0))%>%
ungroup()%>%
select(-asin)%>%
spread(feature_number, binary)
quant_binary_org_df <- quant_stats%>%  ## Okay so here we are first making the data "tidy"
filter(feature_number %in% canopus_available_features_org)%>%
unite(feature, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
group_by(feature_number)%>%
mutate(binary = case_when(asin > mean(asin) ~ 1,
TRUE ~ 0))%>%
ungroup()%>%
select(-asin)%>%
spread(feature_number, binary)
quant_binary_org <-  quant_binary_org_df%>%
column_to_rownames("feature")%>%
data.matrix(rownames.force = NA)
boxplot_N_binary <- quant_binary_org_df%>%
left_join(feature_info, by = 'feature_number')
boxplot_N_binary <- quant_binary_org_df%>%
left_join(feature_info, by = 'feature')
boxplot_N_binary <- quant_binary_org_df%>%
separate(sample_code, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)
View(boxplot_N_binary)
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
left_join(feature_info, by = 'feature')
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
left_join(feature_info, by = 'feature_number')
View(quant_ra)
View(feature_info)
View(mini_quant_dom)
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, asin, 7:ncol(.))
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.))
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
left_join(feature_info, by = 'feature_number')
View(quant_ra)
important_matrix_org <- (rf_matrix$importance%>%
as.data.frame()%>%
rownames_to_column("feature")%>%
filter(MeanDecreaseAccuracy >= mean(MeanDecreaseAccuracy) + sd(MeanDecreaseAccuracy)))$feature%>%
as.vector()
important_matrix_org <- (rf_matrix_mda_org%>%
mutate(feature = gsub("X", "", feature))%>%
filter(MeanDecreaseAccuracy >= mean(MeanDecreaseAccuracy) + sd(MeanDecreaseAccuracy)))$feature%>%
as.vector()
important_matrix_unfil <- (rf_matrix_UnfilFil$importance%>%
as.data.frame()%>%
rownames_to_column("feature")%>%
filter(MeanDecreaseAccuracy >= mean(MeanDecreaseAccuracy) + sd(MeanDecreaseAccuracy)))$feature%>%
as.vector()
important_matrix_unfil <- (rf_matrix_UnfilFil_mda%>%
mutate(feature = gsub("X", "", feature))%>%
filter(MeanDecreaseAccuracy >= mean(MeanDecreaseAccuracy) + sd(MeanDecreaseAccuracy)))$feature%>%
as.vector()
View(rf_matrix_UnfilFil$importance%>%
as.data.frame()%>%
rownames_to_column("feature")()
View((rf_matrix_UnfilFil$importance%>%
as.data.frame()%>%
rownames_to_column("feature"))
)
View(rf_matrix_UnfilFil$importance%>%
as.data.frame()%>%
rownames_to_column("feature")%>%
filter(MeanDecreaseAccuracy >= mean(MeanDecreaseAccuracy) + sd(MeanDecreaseAccuracy)))
test <- rf_matrix_UnfilFil$importance%>%
as.data.frame()%>%
rownames_to_column("feature")
head(test)
mean(test$MeanDecreaseAccuracy)
important_matrix_unfil <- (rf_matrix_UnfilFil$importance%>%
as.data.frame()%>%
rownames_to_column("feature")%>%
filter(MeanDecreaseAccuracy >= (mean(MeanDecreaseAccuracy) + sd(MeanDecreaseAccuracy))))$feature%>%
as.vector()
rf_matrix_UnfilFil_mda%>%
mutate(feature = gsub("X", "", feature))%>%
filter(MeanDecreaseAccuracy >= mean(MeanDecreaseAccuracy) + sd(MeanDecreaseAccuracy))
rf_matrix_UnfilFil_mda%>%
mutate(feature = gsub("X", "", feature))%>%
filter(MeanDecreaseAccuracy >= mean(MeanDecreaseAccuracy))
important_matrix_unfil <- (rf_matrix_UnfilFil%>%
as.data.frame()%>%
rownames_to_column("feature")%>%
filter(MeanDecreaseAccuracy >= (mean(MeanDecreaseAccuracy) + sd(MeanDecreaseAccuracy))))$feature%>%
as.vector()
head(rf_matrix_UnfilFil)
important_matrix_unfil <- (rf_matrix_UnfilFil$importance%>%
as.data.frame()%>%
rownames_to_column("feature")%>%
filter(MeanDecreaseAccuracy >= (mean(MeanDecreaseAccuracy) + sd(MeanDecreaseAccuracy))))$feature%>%
as.vector()
sd(MeanDecreaseAccuracy)
sd(test$MeanDecreaseAccuracy)
test_v <- (mean(MeanDecreaseAccuracy) + sd(MeanDecreaseAccuracy))
test_v <- (mean(test$MeanDecreaseAccuracy) + sd(test$MeanDecreaseAccuracy))
important_matrix_unfil <- (rf_matrix_UnfilFil$importance%>%
as.data.frame()%>%
rownames_to_column("feature")%>%
filter(MeanDecreaseAccuracy >= (test_v)))$feature%>%
as.vector()
test2 <- rf_matrix_UnfilFil$importance%>%
as.data.frame()%>%
rownames_to_column("feature")%>%
filter(MeanDecreaseAccuracy >= (test_v))
View(test)
?sd
test2 <- rf_matrix_UnfilFil$importance%>%
as.data.frame()%>%
rownames_to_column("feature")%>%
filter(MeanDecreaseAccuracy >= mean(MeanDecreaseAccuracy))
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
left_join(feature_info, by = 'feature_number')
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
mutate(feature_number = as.character(feature_number))%>%
left_join(feature_info, by = 'feature_number')
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
mutate(feature_number = as.numeric(feature_number))%>%
left_join(feature_info, by = 'feature_number')
View(boxplot_N_binary)
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
mutate(feature_number = as.numeric(feature_number))%>%
left_join(feature_info, by = 'feature_number')%>%
filter(binary==1)
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
mutate(feature_number = as.numeric(feature_number),
bin_n = case_when(N >0 ~ 1,
TRUE ~ 0))%>%
left_join(feature_info, by = 'feature_number')%>%
filter(binary==1)
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
mutate(feature_number = as.numeric(feature_number),
bin_n = case_when(`N` > 0 ~ 1,
TRUE ~ 0))%>%
left_join(feature_info, by = 'feature_number')%>%
filter(binary==1)
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
mutate(feature_number = as.numeric(feature_number),
bin_n = case_when(`N` > 0 ~ '1',
TRUE ~ '0'))%>%
left_join(feature_info, by = 'feature_number')%>%
filter(binary==1)
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
mutate(feature_number = as.numeric(feature_number),
bin_n = case_when(`N` > 0 ~ '1',
TRUE ~ '0'))%>%
left_join(feature_info, by = 'feature_number')%>%
filter(binary==1)
boxplot_N_binary <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
mutate(feature_number = as.numeric(feature_number))%>%
left_join(feature_info, by = 'feature_number')%>%
mutate(bin_n = case_when(`N` > 0 ~ '1',
TRUE ~ '0'))%>%
filter(binary==1)
boxplot_N_binary%>%
ggplot(aes(Organism, bin_n)) +
geom_boxplot()
View(boxplot_N_binary)
