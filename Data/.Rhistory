unite(sample_code, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
group_by(sample_code)%>%
mutate(ra = xic/sum(xic),
chl_norm = ra/chl,
asin = asin(sqrt(chl_norm)))
cyto_exp2_dom <- cyto_base%>%
group_by(DOM_fil, feature_number)%>%
select(-c('chl', 'xic', 'asin', 'ra'))%>%
filter(Experiment == "Exp2")%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
spread(DOM_fil, chl_norm)%>%
select(-4)
cyto_exp2_org <- cyto_base%>%
group_by(Organism, DOM_fil, feature_number)%>%
select(-c('chl', 'xic', 'asin', 'ra'))%>%
filter(Experiment == "Exp2")%>%
unite(sample, c(Organism, DOM_fil), sep = "_")%>%
spread(sample, chl_norm)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)
cyto_exp2_org2 <- cyto_base%>%
group_by(Organism, feature_number)%>%
select(-c('chl', 'xic', 'asin', 'ra'))%>%
filter(Experiment == "Exp2")%>%
unite(sample, c(Organism), sep = "_")%>%
spread(sample, chl_norm)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)
cyto_exp1_org2 <- cyto_base%>%
group_by(Organism, feature_number)%>%
select(-c('chl', 'xic', 'asin', 'ra'))%>%
filter(Experiment == "Exp1")%>%
unite(sample, c(Experiment, Organism), sep = "_")%>%
spread(sample, chl_norm)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)
cyto_piers <- cyto_base%>%
group_by(Organism, biological_replicates, feature_number)%>%
select(-c('chl', 'xic', 'asin', 'chl_norm'))%>%
filter(Experiment == "Piers")%>%
unite(sample, c(Organism, biological_replicates), sep = "_")%>%
spread(sample, ra)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)
cyto_CCE <- cyto_base%>%
group_by(Organism, biological_replicates, feature_number)%>%
select(-c('chl', 'xic', 'asin', 'chl_norm'))%>%
filter(Experiment == "CCE-P1706")%>%
unite(sample, c(Organism, biological_replicates), sep = "_")%>%
spread(sample, ra)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)
cyto_piers_mean <- cyto_base%>%
group_by(feature_number)%>%
select(-c('chl', 'xic', 'asin', 'chl_norm'))%>%
filter(Experiment == "Piers")%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
rename(mean_piers = 2)
cyto_CCE_mean <- cyto_base%>%
group_by(feature_number)%>%
select(-c('chl', 'xic', 'asin', 'chl_norm'))%>%
filter(Experiment == "CCE-P1706")%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
rename(mean_CCE = 2)
cyto_xic_sum <- cyto_base%>%
group_by(feature_number)%>%
select(-c('chl', 'ra', 'asin', 'chl_norm'))%>%
filter(Experiment == "Exp2")%>%
summarize_if(is.numeric, sum, na.rm = TRUE)%>%
rename(sum_xic_exp2 = 2)
cyto_xic_sum_env <- cyto_base%>%
group_by(feature_number)%>%
select(-c('chl', 'ra', 'asin', 'chl_norm'))%>%
filter(Experiment != "Exp1")%>%
summarize_if(is.numeric, sum, na.rm = TRUE)%>%
rename(sum_xic_exp2env = 2)
cyto_full <- cyto_exp2_org%>%
full_join(cyto_exp2_org2, by = "feature_number")%>%
full_join(cyto_exp2_dom, by = "feature_number")%>%
full_join(cyto_exp1_org2, by = "feature_number")%>%
full_join(cyto_piers, by = "feature_number")%>%
full_join(cyto_piers_mean, by = "feature_number")%>%
full_join(cyto_CCE, by = "feature_number")%>%
full_join(cyto_CCE_mean, by = "feature_number")%>%
full_join(cyto_xic_sum, by = "feature_number")%>%
full_join(cyto_xic_sum_env, by = "feature_number")
write_csv(cyto_full, "./Analyzed/cyto_node_table.csv")
# VIZUALIZATIONS -- network classification --------------------------
classification <- library_info%>%
left_join(lib_id%>%
mutate(feature_number = as.numeric(feature_number))%>%
select('feature_number', 'Compound_Name'),
by = 'feature_number')%>%
left_join(feature_info%>%
select('feature_number', 'ZodiacScore'),
by = 'feature_number')%>%
mutate(comps = case_when(network == -1 ~ -feature_number,
network != -1 ~ network))%>%
group_by(comps)%>%
mutate(libs_count = case_when(feature_number %in% spectral_libs ~ 1,
TRUE ~ 0),
libs_propagation_count = max(libs_count),
zodiac_count = case_when(ZodiacScore > 0.98 ~ 1,
TRUE ~ 0),
zodiac_propagation_count = max(zodiac_count))%>%
ungroup()%>%
select('libs_count', 'libs_propagation_count','zodiac_count', 'zodiac_propagation_count')%>%
summarize_all(sum)
write_csv(classification, "Analyzed/classification_levels.csv")
# VIZUALIZATIONS -- network classification after blank removal--------------------------
classification_afterblank <- library_info%>%
inner_join(quant_df%>%
select('feature_number'),
by = 'feature_number')%>%
left_join(feature_info%>%
select('feature_number', 'ZodiacScore'),
by = 'feature_number')%>%
mutate(comps = case_when(network == -1 ~ -feature_number,
network != -1 ~ network))%>%
group_by(comps)%>%
mutate(libs_count = case_when(feature_number %in% spectral_libs ~ 1,
TRUE ~ 0),
libs_propagation_count = max(libs_count),
zodiac_count = case_when(ZodiacScore > 0.98 ~ 1,
TRUE ~ 0),
zodiac_propagation_count = max(zodiac_count))%>%
ungroup()%>%
select('libs_count', 'libs_propagation_count','zodiac_count', 'zodiac_propagation_count')%>%
summarize_all(sum)
write_csv(classification, "Analyzed/classification_levels.csv")
# VISUALIZATION -- Boxplots binary %N-------------------------------------------
#how many features have nitrogen out of the important features
boxplot_N_binary_perc <- quant_binary_org_df%>%
separate(feature, c("Experiment", "Organism",
"biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_", remove = FALSE)%>%
gather(feature_number, binary, 7:ncol(.)) %>%
mutate(feature_number = as.numeric(feature_number))%>%
left_join(feature_info, by = 'feature_number')%>%
mutate(bin_n = case_when(`N` > 0 ~ '1',
TRUE ~ '0'))%>%
mutate(bin_n = as.numeric(bin_n))%>%
filter(binary==1)%>%
group_by(Organism, DOM_fil, biological_replicates, technical_replicates)%>%
nest()%>%
mutate(data = map(data, ~sum(.x$bin_n)/nrow(.x)))%>%
unnest(data)
boxplot_N_binary_perc%>%
ggplot(aes(Organism, data)) +
geom_hline(yintercept =0.613) +
geom_boxplot()
#+
#facet_wrap(~DOM_fil)
#EXPORT TABLES
### SI Tables: Table S1 Spectral Matches information
libraryFeatures <- lib_id%>%
select(feature_number)
analogId <- read_csv('./Raw/Pn_Analog0.8.csv')%>%
rename(feature_number = 1)%>%
mutate(feature_number = as.character(feature_number))%>%
anti_join(libraryFeatures, by  = 'feature_number')%>%
mutate(id_source = 'Analog')
siTable1 <- lib_id%>%
mutate(id_source = 'LibraryID')%>%
bind_rows(analogId)%>%
select(feature_number, id_source, everything())%>%
left_join(combined_classyfire%>%
select(feature_number, 6:ncol(.)), by = 'feature_number')%>%
mutate(important_org = case_when(feature_number %in% important_quant_org ~ 'yes',
TRUE ~ 'no'),
important_dom = case_when(feature_number %in% important_quant_dom ~ 'yes',
TRUE ~ 'no'))
write_csv(siTable1, "Analyzed/TableS1_Spectralmatches.csv")
# VISUALIZATIONS -- Class/Family stacked bar chart--------------------------------------
#Defining the colors for the Class/Family plot
#First 3 are Alpha's
#1 Bacteroidia, 2 Beta
#9 Gammaproteobacteria
if (!require("RColorBrewer")) install.packages("RColorBrewer")
library(RColorBrewer)
brewer.pal.info
colors_taxonomy <- c("#2B503C", "#40775A", "#519872",
"#FFF3B0",
"#5E6982", "#7D88A1",
"#A32978","#AF3F88","#BB5597","#C76BA7","#D381B6","#DF97C6","#EBADD5")
otu_vis <- otu_stats%>%
separate(sample_code_16S, c("Experiment", "Organism",
"biological_replicates", "technical_replicates"), sep = "_")%>%
group_by(Taxonomy)%>%
filter(sum(asin) != 0)%>%
ungroup()
otu_test <- otu_vis%>%
filter(Experiment == "Exp2")%>%
group_by(Taxonomy)%>%
filter(sum(reads) > 0)%>%
ungroup()%>%
group_by(Organism, Taxonomy)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
separate(Taxonomy, c("otu_number", "Kingdom", "Phylum", "Class", "Order", "Family", "Genus"), sep = ";")%>%
unite(tax, c('Class', 'Family'), sep = '; ', remove = FALSE)%>%
mutate(Organism = gsub('Pn-', '', Organism))%>%
ggplot(aes(Organism, ra, fill = tax)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_manual(values = colors_taxonomy) +
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
axis.title.x = element_text(size=14, face="bold", color = 'black'),
axis.title.y = element_text(size=14, face="bold", color = 'black'),
axis.text.x = element_text(face="bold", angle = 60, hjust = 1, size=14, color = 'black'),
axis.text.y = element_text(face="bold", size=14, color = 'black'),
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
axis.line = element_line(color="black"))
otu_test
# VISUALIZATION -- PCoA org and unfilfil -------------------------------------------------
##Quant all
pcoa_quant <- quant_stats%>%
unite(sample, c("Experiment", "Organism", "biological_replicates", "DOM_fil", "technical_replicates"), sep = "_")%>%
spread(feature_number, asin)%>%
column_to_rownames("sample")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_quant$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
## otu Exp1 and 2 del, sub, mul
pcoa_otu_bothExp <- otu_stats_bothExp%>%
filter(sample_code_16S != "Exp1_Pn-subpacifica_A_I",
sample_code_16S != "Exp1_Pn-subpacifica_A_II",
sample_code_16S != "Exp1_Pn-delicatissima_B_I",
sample_code_16S != "Exp1_Pn-delicatissima_B_II",)%>%
separate(sample_code_16S, c("Experiment", "Organism",
"biological_replicates", "technical_replicates"), sep = "_")%>%
filter(Experiment != "CCE-P1706",
Experiment != "Piers")%>%
filter(Organism != "Pn-hasleana",
Organism != "Pn-galaxiae")%>%
group_by(Taxonomy)%>%
filter(sum(asin) != 0)%>%
ungroup()%>%
unite(sample_name, c("Experiment", "Organism", "biological_replicates",
"technical_replicates"), sep = "_")%>%
select(-c(reads, ra))%>%
spread(Taxonomy, asin)%>%
column_to_rownames("sample_name")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_otu_bothExp$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
## otu Exp2
pcoa_otu_Exp2 <- otu_stats%>%
separate(sample_code_16S, c("Experiment", "Organism",
"biological_replicates", "technical_replicates"), sep = "_")%>%
filter(Experiment == "Exp2")%>%
group_by(Taxonomy)%>%
filter(sum(asin) != 0)%>%
ungroup()%>%
unite(sample_name, c("Experiment", "Organism", "biological_replicates",
"technical_replicates"), sep = "_")%>%
select(-c(reads, ra))%>%
spread(Taxonomy, asin)%>%
column_to_rownames("sample_name")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_otu_Exp2$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
## Organism Matrix
pcoa_org <- matrix_multiplied_org%>%
#gather(cat, val, 2:ncol(.))%>%
#mutate(val = val+ min(val) +1)%>%
#spread(cat, val)%>%
column_to_rownames("sample_code")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_org$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
## Unfil vs Fil matrix
pcoa_dom <- matrix_multiplied_dom%>%
#mutate(val = val+ min(val) +1)%>%
#spread(cat, val)%>%
column_to_rownames("sample_code")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_dom$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
#Settings for Pcoas
pcoa_settings <- function(x) {
ggplot(x, aes(Axis.1, Axis.2, color = Organism, shape = DOM_fil)) +
geom_point(stat = "identity", size = 4) +
scale_color_manual(values = c("#75d648", "#64d6f7", "#2d67c7", "#f27304", "#fec601")) +
scale_shape_manual(values=c(1, 16))+
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.x = element_text(face="bold", size=14),
axis.text.y = element_text(face="bold", size=14),
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
axis.line = element_line(color="black"))
}
## Plotting PCoAs
pdf("Plots/PCoA_all.pdf", width = 7, height = 5)
pcoa_quant$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
pcoa_settings() +
ylab(str_c("Axis 2", " (", round(pcoa_quant$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_quant$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("quant all")
pcoa_otu_bothExp$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "technical_replicates"), sep = "_")%>%
ggplot(aes(Axis.1, Axis.2, color = Organism, shape = Experiment)) +
geom_point(size = 4) +
scale_color_manual(values = c("#75d648", "#f27304", "#fec601")) +
scale_shape_manual(values=c(17,16))+
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.x = element_text(face="bold", size=14),
axis.text.y = element_text(face="bold", size=14),
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
axis.line = element_line(color="black"))+
ylab(str_c("Axis 2", " (", round(pcoa_otu_bothExp$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_otu_bothExp$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("otus")
pcoa_otu_Exp2$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "technical_replicates"), sep = "_")%>%
ggplot(aes(Axis.1, Axis.2, color = Organism, shape = Experiment)) +
geom_point(stat = "identity", aes(size = 0.1)) +
scale_color_manual(values = c("#75d648", "#64d6f7", "#2d67c7", "#f27304", "#fec601")) +
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.x = element_text(face="bold", size=14),
axis.text.y = element_text(face="bold", size=14),
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
axis.line = element_line(color="black"))+
ylab(str_c("Axis 2", " (", round(pcoa_otu_Exp2$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_otu_Exp2$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("otus")
pcoa_org$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
pcoa_settings() +
ylab(str_c("Axis 2", " (", round(pcoa_org$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_org$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("Matrix: Culture")
pcoa_dom$vectors%>%
as.data.frame()%>%
rownames_to_column("sample_code")%>%
separate(sample_code, c("Experiment", "Organism", "biological_replicates", "DOM_fil",
"technical_replicates"), sep = "_")%>%
pcoa_settings() +
ylab(str_c("Axis 2", " (", round(pcoa_dom$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
xlab(str_c("Axis 1", " (", round(pcoa_dom$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ggtitle("Matrix: UnfilFil")
dev.off()
# VISUALIZATION -- Mean Decrease Accuracy scatterplots -------------------------
mda_theme <- theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
axis.line = element_line(color="black"))
pdf("./Plots/Mean_Decrease_Accuracy.pdf", height = 5, width = 7)
ggplot(rf_quant_org_mda, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("Organism QUANT Mean Decrease Accuracy") +
xlab("Features (decreasing mda)") +
ylab("Mean Decrease Accuracy") +
geom_hline(yintercept = (mean(rf_quant_org_mda$MeanDecreaseAccuracy + sd(rf_quant_org_mda$MeanDecreaseAccuracy))),
col = "red") +
mda_theme
ggplot(rf_quant_dom_mda, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("DOM Quant Mean Decrease Accuracy") +
xlab("Features (decreasing mda)") +
ylab("Mean Decrease Accuracy") +
geom_hline(yintercept = (mean(rf_quant_org_mda$MeanDecreaseAccuracy + sd(rf_quant_org_mda$MeanDecreaseAccuracy))),
col = "red") +
mda_theme
ggplot(otu_rf_mda, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("OTU Mean Decrease Accuracy") +
xlab("Features (decreasing mda)") +
ylab("Mean Decrease Accuracy") +
mda_theme
ggplot(rf_matrix_mda_org, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("Organism Matrix Mean Decrease Accuracy") +
xlab("Features (decreasing mda)") +
ylab("Mean Decrease Accuracy") +
geom_hline(yintercept = (mean(rf_matrix_mda_org$MeanDecreaseAccuracy)),
col = "red") +
mda_theme
ggplot(rf_matrix_UnfilFil_mda, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("FilUnfil Matrix Mean Decrease Accuracy") +
xlab("Features (decreasing mda)") +
ylab("Mean Decrease Accuracy") +
geom_hline(yintercept = (mean(rf_matrix_UnfilFil_mda$MeanDecreaseAccuracy)),
col = "red") +
mda_theme
dev.off()
View(multi_matrix_random_forest_df)
View(multi_matrix_random_forest_UnfilFil_df)
View(rf_matrix_mda_org)
View(aov_matrix_dom)
# STATS ANOVA -- dom matrix -----------------------------------------------
aov_matrix_dom <- multi_matrix_tidy_dom%>%
group_by(category)%>%
nest()%>%
mutate(data = map(data, ~ aov(mult ~ DOM_fil, .x)%>%
tidy()))%>%
unnest(data)%>%
ungroup()%>%
mutate(FDR = p.adjust(p.value, method = "BH"))%>%
#filter(FDR < 0.05)
matrix_aov_dom_sig <- aov_matrix_dom$category%>%
as.vector()
View(aov_matrix_dom)
aov_matrix_dom <- multi_matrix_tidy_dom%>%
group_by(category)%>%
nest()%>%
mutate(data = map(data, ~ aov(mult ~ DOM_fil, .x)%>%
tidy()))%>%
unnest(data)%>%
ungroup()%>%
mutate(FDR = p.adjust(p.value, method = "BH"))
View(aov_matrix_dom)
# STATS ANOVA -- dom matrix -----------------------------------------------
aov_matrix_dom <- multi_matrix_tidy_dom%>%
group_by(category)%>%
nest()%>%
mutate(data = map(data, ~ aov(mult ~ DOM_fil, .x)%>%
tidy()))%>%
unnest(data)%>%
ungroup()%>%
mutate(FDR = p.adjust(p.value, method = "BH"))%>%
filter(FDR < 0.05)
matrix_aov_dom_sig <- aov_matrix_dom$category%>%
as.vector()
write_csv(aov_matrix_dom, "Analyzed/anova_pvals_matrix_dom.csv")
aov_matrix_dom <- multi_matrix_tidy_dom%>%
group_by(category)%>%
nest()%>%
mutate(data = map(data, ~ aov(mult ~ DOM_fil, .x)%>%
tidy()))%>%
unnest(data)%>%
ungroup()%>%
mutate(FDR = p.adjust(p.value, method = "BH"))
View(aov_matrix_dom)
# STATS ANOVA -- dom matrix -----------------------------------------------
aov_matrix_dom <- multi_matrix_tidy_dom%>%
group_by(category)%>%
nest()%>%
mutate(data = map(data, ~ aov(mult ~ DOM_fil, .x)%>%
tidy()))%>%
unnest(data)%>%
ungroup()%>%
mutate(FDR = p.adjust(p.value, method = "BH"))%>%
filter(FDR < 0.05)
matrix_aov_dom_sig <- aov_matrix_dom$category%>%
as.vector()
